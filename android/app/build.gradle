def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

     signingConfigs {
         equity {
             keyAlias 'equity'
             keyPassword '1qaz@WSX'
             storeFile file('equity-android.jks')
             storePassword '1qaz@WSX'
         }
     }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.zjex.equity"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {

            /*签名*/
            signingConfig signingConfigs.equity
//            signingConfig signingConfigs.debug

//            ndk{
//                abiFilters "armeabi-v7a"
//            }
        }

        debug {
            /*签名*/
            signingConfig signingConfigs.equity
//            signingConfig signingConfigs.debug

            // ndk{
            //     abiFilters "armeabi", "armeabi-v7a"
            // }
        }
    }

    sourceSets {
        main{
            jniLibs.srcDirs = ['libs']
        }
    }
}

repositories  {
    flatDir{
        dirs 'libs'
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    implementation project(':lib-zxing')

//    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'

    compile 'com.android.support:support-v13:28.0.0'
//    compile 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.google.code.gson:gson:2.7'
    implementation (name: 'V4.3.LL190722.20190722', ext: 'aar')

}
